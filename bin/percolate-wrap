#!/usr/bin/env ruby

require 'rubygems'
require 'optparse'
require 'percolate/message_queue'

include Percolate::Asynchronous

args = MessageClientArguments.new(ARGV)
command = ARGV.join(' ')

begin
  if ! args.has_key?(:task_id)
    raise ArgumentError, 'Error: a --task_id argument must be provided'
  elsif ! args.has_key?(:queue)
    raise ArgumentError, 'Error: a --queue argument must be provided'
  elsif ! args.has_key?(:host)
    raise ArgumentError, 'Error: a --host argument must be provided'
  elsif ! args.has_key?(:port)
    raise ArgumentError, 'Error: a --port argument must be provided'
  end
rescue ArgumentError => ae
  $stderr.puts(ae)
  exit(1)
end

client = MessageClient.new(args[:queue], args[:host], args[:port])

client.send_message(TaskMessage.new(args[:task_id], :started))
system(command)
client.send_message(TaskMessage.new(args[:task_id], :finished, $?.exitstatus))

exit($?.exitstatus)
